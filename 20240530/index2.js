// 작업을 할 때 하나의 파일에 기능의 내용을 모두 작성하면 유지보수가 힘들고, 변수명 겹치고, 협업도 힘들고 여러 이슈들이 생김
// 그래서 모듈화를 시킴 / 하나의 큰 프로그램의 가장 작은 단위, 모듈을 각각의 파일 단위로 구분 되고 파일의 내용은 필요한 기능들의 함수나 변수들이 포함되어 있는 것

const devClass = [
    {
        name: "이민혁",
        age: 20,
        comment() {
            console.log("안녕");
        }
    }
]

console.log(devClass);
// NodeJS 런타임 환경에서 실행
// node "파일의 경로" (읽고 해석해서 출력)

// 터미널에 node만 치면 레포모드 (Js 코드를 작성할 수 있게 해주는 모드)
// 터미널에 node 한칸 띄우고 파일명을 작성하면 런타임을 해줌 (cd로 경로안에 들어와서 런타임을 해줘야 함)

// 모듈을 내보낸다.
module.exports = devClass;
// module.exports = "1234";
// index2.js에서 내보낼 데이터 (반환되는 데이터를 내보냄)

// 즉 첫번째 줄은 devClass 변수 안에 있는 값
// 두번째 줄은 1234를 내보냄